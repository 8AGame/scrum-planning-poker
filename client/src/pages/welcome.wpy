
<style type="less">
.welcome-bg {
  position: absolute;
  top: -200rpx;
  bottom: 0;
  left: 0;
  right: 0;
  background-color: #0678c1;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  overflow: hidden;
}

.welcome-bg cover-image {
  width: 57vw;
  height: 105vw;
  z-index: 1;
}

.welcome-bg-circle {
  width: 120vw;
  height: 120vw;
  background-color: #fff;
  position: absolute;
  left: -10vw;
  top: calc(~'105vw + 200rpx');
  border-radius: 60vw;
}

.welcome-title {
  color: #fff;
  text-align: center;
  font-size: 32rpx;
  margin-bottom: 40rpx;
  margin-left: 80rpx;
  margin-right: 80rpx;
}

.welcome-btn-area {
  position: absolute;
  bottom: 60rpx;
}
</style>
<template>
  <view class="container">
    <view class="page-body">
      <view class="welcome-bg">
        <view class="welcome-title">{{t.text}}</view>
        <cover-image src="../images/cover.png"></cover-image>
        <view class="welcome-bg-circle"></view>
      </view>
      <view class="welcome-btn-area btn-area">
        <button type="primary" open-type="getUserInfo" loading="{{loading}}" @getuserinfo="onGotUserInfo">{{t.button}}</button>
      </view>
    </view>
  </view>
</template>

<script>
import wepy from 'wepy';
import LocalesMixin from '@/mixins/locales-mixin';

export default class Welcome extends wepy.page {
  mixins = [LocalesMixin];

  data = {
    loading: false
  }

  watch = {
    t() {
      wepy.setNavigationBarTitle({ title: this.t.title });
    }
  };

  methods = {
    async onGotUserInfo(e) {
      const { encryptedData, iv } = e.detail;
      if (encryptedData && iv) {
        this.loading = true;
        await this.$parent.login();
        this.redirect();
      } else {
        await this.openSetting();
      }
    }
  };

  onLoad(options, { from }) {
    this.from = from;
  }

  redirect() {
    if (this.from) {
      this.$redirect(
        this.from.$wxpage.route.replace('pages/', ''),
        this.from.$wxpage.options
      );
    } else {
      this.$redirect('index');
    }
  }

  async openSetting() {
    const { authSetting } = await wepy.openSetting();
    if (authSetting['scope.userInfo']) {
      this.redirect();
    } else {
      wepy.showModal({
        title: 'Sorry',
        content:
          'Your profile information is required. Please grant the permission.',
        confirmText: 'OK',
        confirmColor: '#0678C1',
        showCancel: false,
        success: () => {
          this.openSetting();
        }
      });
    }
  }
}
</script>
