<style lang="less">
.top-stick {
  background-color: #0678c1;
}

.top-stick button {
  margin-top: 10rpx;
  margin-bottom: 10rpx;
  width: 540rpx;
  line-height: 80rpx;
  font-size: 36rpx;
  font-weight: 500;
  color: #0678c1;
}

.container {
  padding-top: 100rpx;
  box-sizing: border-box;
}

.room-list {
  background-color: #ffffff;
  border: 2rpx solid #d8d8d8;
  margin-bottom: 40rpx;
}

.page-section-empty {
  margin-top: 89rpx;
  text-align: center;
  font-size: 35rpx;
  line-height: 39rpx;
}
</style>
<template>
<view class="page">
  <view class="top-stick">
    <button @tap="onCreateTap">{{t.create_button}}</button>
  </view>
  <view class="container">
    <view class="page-body">
      <block wx:if="{{rooms && rooms.length}}">
        <view class="page-section-title">{{t.history_rooms}}</view>
        <view class="page-section">
          <view class="page-section-spacing">
            <view class="room-list">
              <repeat for="{{rooms}}" key="id" item="room">
                <roomListItem :room="room"></roomListItem>
              </repeat>
            </view>
          </view>
        </view>
      </block>
      <block wx:elif="{{!loading}}">
        <view class="page-section">
          <view class="page-section-spacing page-section-empty">
            <view>{{t.empty_line_1}}</view>
            <view>{{t.empty_line_2}}</view>
          </view>
        </view>
      </block>
    </view>
    <feedback></feedback>
  </view>
</view>
</template>

<script>
import wepy from 'wepy';
import Feedback from '@/components/feedback';
import RoomListItem from '@/components/room-list-item';
import LocalesMixin from '@/mixins/locales-mixin';
import LoginMixin from '@/mixins/login-mixin';

export default class Index extends wepy.page {
  config = {
    enablePullDownRefresh: true
  };

  data = {
    rooms: [],
    loading: false
  };

  components = {
    roomListItem: RoomListItem,
    feedback: Feedback
  };

  mixins = [LocalesMixin, LoginMixin];

  methods = {
    async onCreateTap() {
      this.$navigate('create-room');
    }
  };

  watch = {
    t() {
      wepy.setNavigationBarTitle({ title: this.t.title });
    }
  };

  async onShow() {
    await this.getRooms();
  }

  async onPullDownRefresh() {
    await this.getRooms();
    await wepy.stopPullDownRefresh();
  }

  async getRooms() {
    if (!this.$parent.globalData.token) return;
    this.loading = true;
    // TODO: wechat 7.0.10 block loading list, temp hide
    // await wepy.showLoading();
    const rooms = await wepy.request({
      url: `/rooms`,
      method: 'GET'
    });
    if (rooms) {
      this.rooms = rooms;
      this.loading = false;
      this.$apply();
    }
    // TODO: wechat 7.0.10 block loading list, temp hide
    // await wepy.hideLoading();
  }
}
</script>
